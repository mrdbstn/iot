[{"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\index.js":"1","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\App.js":"2","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\reportWebVitals.js":"3","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Header\\Header.js":"5","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Events\\Events.js":"6","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Upload\\Upload.js":"7","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Connect\\Connect.js":"8","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Memories\\Memories.js":"9","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\aws-exports.js":"10","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Forms\\Forms.js":"11","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Album\\Album.js":"12","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\AlbumPage\\AlbumPage.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1106,"mtime":1610138086963,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":438,"mtime":1607966063767,"results":"18","hashOfConfig":"15"},{"size":777,"mtime":1610147814731,"results":"19","hashOfConfig":"15"},{"size":193,"mtime":1607975741843,"results":"20","hashOfConfig":"15"},{"size":361,"mtime":1609867317656,"results":"21","hashOfConfig":"15"},{"size":200,"mtime":1607975768765,"results":"22","hashOfConfig":"15"},{"size":3532,"mtime":1610548674632,"results":"23","hashOfConfig":"15"},{"size":580,"mtime":1610030599857,"results":"24","hashOfConfig":"15"},{"size":5559,"mtime":1610060786622,"results":"25","hashOfConfig":"15"},{"size":613,"mtime":1610548887167,"results":"26","hashOfConfig":"15"},{"size":1124,"mtime":1610550426694,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ib5cny",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\index.js",[],["58","59"],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\App.js",[],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\reportWebVitals.js",[],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Header\\Header.js",["60"],"import React from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport './Header.css'\r\n\r\nfunction Header({}) {\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n\r\n    let pathname = location.pathname.substring(1) ? location.pathname.substring(1) : \"Memories\"\r\n    let pathnameCap = pathname.charAt(0).toUpperCase() + pathname.slice(1)\r\n    return (\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n                history.push('./upload')\r\n            }}className=\"header__container\">\r\n                <button className=\"header__upload-button\">Upload</button>\r\n                <h1 className=\"header__title\">{pathnameCap}</h1>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Events\\Events.js",[],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Upload\\Upload.js",["61"],"import React from 'react'\r\nimport { MemoriesForm, TestForm } from '../Forms/Forms'\r\nimport './Upload.css'\r\n\r\n\r\nfunction Upload() {\r\n    return (\r\n        <div className=\"upload\" style={{height:\"80vh\"}}>\r\n            <div className=\"upload__container\">\r\n                <MemoriesForm />\r\n            </div>\r\n         </div> \r\n    )\r\n}\r\n\r\nexport default Upload\r\n ","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Connect\\Connect.js",[],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Memories\\Memories.js",["62","63","64","65","66","67","68","69"],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\aws-exports.js",[],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Forms\\Forms.js",["70"],"import { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik'\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport Amplify, {Storage} from 'aws-amplify'\r\nimport awsconfig from '../aws-exports'\r\nimport './Forms.css'\r\n\r\nAmplify.configure(awsconfig);\r\n\r\nexport const Thumb = ({ file }) => {\r\n\r\n    const [thumb, setThumb] = useState(undefined)\r\n    const isFirstRun = useRef(true)\r\n    useEffect(() => {\r\n        if (isFirstRun.current) {\r\n            isFirstRun.current = false;\r\n            return;\r\n        }\r\n        let reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            setThumb(reader.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n    }, [file])\r\n\r\n    return (\r\n        <img\r\n            src={thumb}\r\n            alt=''\r\n            height={200}\r\n            width={200} />\r\n    )\r\n}\r\n\r\n\r\nexport const MemoriesForm = () => {\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    name: '',\r\n                    date: '',\r\n                    pictures: [{\r\n                        file: undefined\r\n                    }]\r\n                }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.name || !values.date || !values.pictures) {\r\n                        errors.name = 'Required';\r\n                        errors.date = 'Required';\r\n                        errors.pictures = 'Required';\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, actions) => {\r\n\r\n                    let data = new FormData()\r\n                    values.pictures.map((picture, index) => {\r\n                        data.append(`album-${values.name}-${values.date}/file_${index}`, picture.file)\r\n                    })\r\n                    data.append('name', values.name)\r\n                    \r\n                    for (let [key, file] of data.entries()) {\r\n                        if (key.includes('file')) {\r\n                           Storage.put(key, file, {\r\n                               contentType: \"image/png\"\r\n                           })\r\n                           .then(result => console.log(result))\r\n                           .catch(err => console.log(err))\r\n                        }   \r\n                    }\r\n\r\n                    actions.setSubmitting(false);\r\n                }}>\r\n                {({ isSubmitting, setFieldValue, values }) => (\r\n                    <Form>\r\n                        <label htmlFor=\"name\">Name: </label> <br />\r\n                        <Field type=\"name\" name=\"name\" />\r\n                        <ErrorMessage name=\"name\" component=\"div\" />\r\n                        <label htmlFor=\"date\">Date: </label> <br />\r\n                        <Field type=\"date\" name=\"date\" /> <br />\r\n                        <ErrorMessage name=\"date\" component=\"div\" />\r\n                        <FieldArray name='pictures'>\r\n                            {({ insert, remove, push }) => (\r\n\r\n                                <div>\r\n                                    {values.pictures.length > 0 &&\r\n                                        values.pictures.map((picture, index) => (\r\n                                            <div className=\"row\" key={index}>\r\n                                                <div className=\"col\">\r\n                                                    <label htmlFor={`pictures.${index}.name`}>Picture</label>\r\n                                                    <Field\r\n                                                        name={`pictures.${index}.name`}\r\n                                                        type='file'\r\n                                                        onChange={event => {\r\n                                                            setFieldValue(`pictures.${index}.file`, event.currentTarget.files[0])\r\n                                                        }}\r\n                                                    />\r\n                                                    <Thumb file={picture.file} />\r\n                                                    <ErrorMessage name={`pictures.${index}.name`} component=\"div\" />\r\n                                                </div>\r\n                                                <div className=\"col\">\r\n                                                    <button\r\n                                                        type='button'\r\n                                                        className=\"secondary\"\r\n                                                        onClick={() => remove(index)}>\r\n                                                        X\r\n                                                        </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    <button\r\n                                        type='button'\r\n                                        className=\"secondary\"\r\n                                        onClick={() => push({ file: undefined })}>Add picture</button>\r\n                                </div>\r\n                            )}\r\n                        </FieldArray>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Submit\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\Album\\Album.js",["71","72"],"C:\\Users\\20191873\\Desktop\\scor\\iot\\mobile_app\\src\\components\\AlbumPage\\AlbumPage.js",["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":17,"nodeType":"81","messageId":"82","endLine":5,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":2,"column":24,"nodeType":"85","messageId":"86","endLine":2,"endColumn":32},{"ruleId":"83","severity":1,"message":"87","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":16},{"ruleId":"83","severity":1,"message":"88","line":49,"column":12,"nodeType":"85","messageId":"86","endLine":49,"endColumn":17},{"ruleId":"83","severity":1,"message":"89","line":49,"column":19,"nodeType":"85","messageId":"86","endLine":49,"endColumn":27},{"ruleId":"83","severity":1,"message":"90","line":54,"column":12,"nodeType":"85","messageId":"86","endLine":54,"endColumn":18},{"ruleId":"83","severity":1,"message":"91","line":54,"column":20,"nodeType":"85","messageId":"86","endLine":54,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":69,"column":22,"nodeType":"94","messageId":"95","endLine":69,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":89,"column":31,"nodeType":"98","messageId":"82","endLine":89,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":99,"column":8,"nodeType":"101","endLine":99,"endColumn":10,"suggestions":"102"},{"ruleId":"92","severity":1,"message":"93","line":59,"column":58,"nodeType":"94","messageId":"95","endLine":59,"endColumn":60},{"ruleId":"83","severity":1,"message":"103","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":14,"column":13,"nodeType":"106","endLine":14,"endColumn":55},{"ruleId":"83","severity":1,"message":"107","line":16,"column":11,"nodeType":"85","messageId":"86","endLine":16,"endColumn":20},{"ruleId":"99","severity":1,"message":"108","line":29,"column":8,"nodeType":"101","endLine":29,"endColumn":10,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'TestForm' is defined but never used.","Identifier","unusedVar","'filter' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'holder' is assigned a value but never used.","'setHolder' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeAlbums'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'albumname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [makeAlbums]",{"range":"118","text":"119"},"Update the dependencies array to be: [fetchImages]",{"range":"120","text":"121"},[2928,2930],"[makeAlbums]",[770,772],"[fetchImages]"]